/*!
 * enquire.js v2.1.2 - Awesome Media Queries in JavaScript
 * Copyright (c) 2014 Nick Williams - http://wicky.nillia.ms/enquire.js
 * License: MIT (http://www.opensource.org/licenses/mit-license.php)
 */
(function(a,b,c){var d=window.matchMedia;if(typeof module!=="undefined"&&module.exports){module.exports=c(d)}else if(typeof define==="function"&&define.amd){define(function(){return b[a]=c(d)})}else{b[a]=c(d)}})("enquire",this,function(a){"use strict";/*jshint unused:false */
/**
     * Helper function for iterating over a collection
     *
     * @param collection
     * @param fn
     */
function b(a,b){var c=0,d=a.length,e;for(c;c<d;c++){e=b(a[c],c);if(e===false){break}}}/**
     * Helper function for determining whether target object is an array
     *
     * @param target the object under test
     * @return {Boolean} true if array, false otherwise
     */
function c(a){return Object.prototype.toString.apply(a)==="[object Array]"}/**
     * Helper function for determining whether target object is a function
     *
     * @param target the object under test
     * @return {Boolean} true if function, false otherwise
     */
function d(a){return typeof a==="function"}/**
     * Delegate to handle a media query being matched and unmatched.
     *
     * @param {object} options
     * @param {function} options.match callback for when the media query is matched
     * @param {function} [options.unmatch] callback for when the media query is unmatched
     * @param {function} [options.setup] one-time callback triggered the first time a query is matched
     * @param {boolean} [options.deferSetup=false] should the setup callback be run immediately, rather than first time query is matched?
     * @constructor
     */
function e(a){this.options=a;!a.deferSetup&&this.setup()}e.prototype={/**
         * coordinates setup of the handler
         *
         * @function
         */
setup:function(){if(this.options.setup){this.options.setup()}this.initialised=true},/**
         * coordinates setup and triggering of the handler
         *
         * @function
         */
on:function(){!this.initialised&&this.setup();this.options.match&&this.options.match()},/**
         * coordinates the unmatch event for the handler
         *
         * @function
         */
off:function(){this.options.unmatch&&this.options.unmatch()},/**
         * called when a handler is to be destroyed.
         * delegates to the destroy or unmatch callbacks, depending on availability.
         *
         * @function
         */
destroy:function(){this.options.destroy?this.options.destroy():this.off()},/**
         * determines equality by reference.
         * if object is supplied compare options, if function, compare match callback
         *
         * @function
         * @param {object || function} [target] the target for comparison
         */
equals:function(a){return this.options===a||this.options.match===a}};/**
     * Represents a single media query, manages it's state and registered handlers for this query
     *
     * @constructor
     * @param {string} query the media query string
     * @param {boolean} [isUnconditional=false] whether the media query should run regardless of whether the conditions are met. Primarily for helping older browsers deal with mobile-first design
     */
function f(b,c){this.query=b;this.isUnconditional=c;this.handlers=[];this.mql=a(b);var d=this;this.listener=function(a){d.mql=a;d.assess()};this.mql.addListener(this.listener)}f.prototype={/**
         * add a handler for this query, triggering if already active
         *
         * @param {object} handler
         * @param {function} handler.match callback for when query is activated
         * @param {function} [handler.unmatch] callback for when query is deactivated
         * @param {function} [handler.setup] callback for immediate execution when a query handler is registered
         * @param {boolean} [handler.deferSetup=false] should the setup callback be deferred until the first time the handler is matched?
         */
addHandler:function(a){var b=new e(a);this.handlers.push(b);this.matches()&&b.on()},/**
         * removes the given handler from the collection, and calls it's destroy methods
         * 
         * @param {object || function} handler the handler to remove
         */
removeHandler:function(a){var c=this.handlers;b(c,function(b,d){if(b.equals(a)){b.destroy();return!c.splice(d,1)}})},/**
         * Determine whether the media query should be considered a match
         * 
         * @return {Boolean} true if media query can be considered a match, false otherwise
         */
matches:function(){return this.mql.matches||this.isUnconditional},/**
         * Clears all handlers and unbinds events
         */
clear:function(){b(this.handlers,function(a){a.destroy()});this.mql.removeListener(this.listener);this.handlers.length=0},/*
         * Assesses the query, turning on all handlers if it matches, turning them off if it doesn't match
         */
assess:function(){var a=this.matches()?"on":"off";b(this.handlers,function(b){b[a]()})}};/**
     * Allows for registration of query handlers.
     * Manages the query handler's state and is responsible for wiring up browser events
     *
     * @constructor
     */
function g(){if(!a){throw new Error("matchMedia not present, legacy browsers require a polyfill")}this.queries={};this.browserIsIncapable=!a("only all").matches}g.prototype={/**
         * Registers a handler for the given media query
         *
         * @param {string} q the media query
         * @param {object || Array || Function} options either a single query handler object, a function, or an array of query handlers
         * @param {function} options.match fired when query matched
         * @param {function} [options.unmatch] fired when a query is no longer matched
         * @param {function} [options.setup] fired when handler first triggered
         * @param {boolean} [options.deferSetup=false] whether setup should be run immediately or deferred until query is first matched
         * @param {boolean} [shouldDegrade=false] whether this particular media query should always run on incapable browsers
         */
register:function(a,e,g){var h=this.queries,i=g&&this.browserIsIncapable;if(!h[a]){h[a]=new f(a,i)}
//normalise to object in an array
if(d(e)){e={match:e}}if(!c(e)){e=[e]}b(e,function(b){if(d(b)){b={match:b}}h[a].addHandler(b)});return this},/**
         * unregisters a query and all it's handlers, or a specific handler for a query
         *
         * @param {string} q the media query to target
         * @param {object || function} [handler] specific handler to unregister
         */
unregister:function(a,b){var c=this.queries[a];if(c){if(b){c.removeHandler(b)}else{c.clear();delete this.queries[a]}}return this}};return new g});/*
Copyright © 2013 Adobe Systems Incorporated.

Licensed under the Apache License, Version 2.0 (the “License”);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an “AS IS” BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
/**
 * See <a href="http://jquery.com">http://jquery.com</a>.
 * @name jquery
 * @class
 * See the jQuery Library  (<a href="http://jquery.com">http://jquery.com</a>) for full details.  This just
 * documents the function and classes that are added to jQuery by this plug-in.
 */
/**
 * See <a href="http://jquery.com">http://jquery.com</a>
 * @name fn
 * @class
 * See the jQuery Library  (<a href="http://jquery.com">http://jquery.com</a>) for full details.  This just
 * documents the function and classes that are added to jQuery by this plug-in.
 * @memberOf jquery
 */
/**
 * @fileOverview accessibleMegaMenu plugin
 *
 *<p>Licensed under the Apache License, Version 2.0 (the “License”)
 *<br />Copyright © 2013 Adobe Systems Incorporated.
 *<br />Project page <a href="https://github.com/adobe-accessibility/Accessible-Mega-Menu">https://github.com/adobe-accessibility/Accessible-Mega-Menu</a>
 * @version 0.1
 * @author Michael Jordan
 * @requires jquery
 */
/*jslint browser: true, devel: true, plusplus: true, nomen: true */
/*global jQuery */
(function(a,b,c){"use strict";var d="accessibleMegaMenu",e={uuidPrefix:"accessible-megamenu",// unique ID's are required to indicate aria-owns, aria-controls and aria-labelledby
menuClass:"accessible-megamenu",// default css class used to define the megamenu styling
topNavItemClass:"accessible-megamenu-top-nav-item",// default css class for a top-level navigation item in the megamenu
panelClass:"accessible-megamenu-panel",// default css class for a megamenu panel
panelGroupClass:"accessible-megamenu-panel-group",// default css class for a group of items within a megamenu panel
hoverClass:"hover",// default css class for the hover state
focusClass:"focus",// default css class for the focus state
openClass:"open"},f={BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38,keyMap:{48:"0",49:"1",50:"2",51:"3",52:"4",53:"5",54:"6",55:"7",56:"8",57:"9",59:";",65:"a",66:"b",67:"c",68:"d",69:"e",70:"f",71:"g",72:"h",73:"i",74:"j",75:"k",76:"l",77:"m",78:"n",79:"o",80:"p",81:"q",82:"r",83:"s",84:"t",85:"u",86:"v",87:"w",88:"x",89:"y",90:"z",96:"0",97:"1",98:"2",99:"3",100:"4",101:"5",102:"6",103:"7",104:"8",105:"9",190:"."}};/**
     * @desc Creates a new accessible mega menu instance.
     * @param {jquery} element
     * @param {object} [options] Mega Menu options
     * @param {string} [options.uuidPrefix=accessible-megamenu] - Prefix for generated unique id attributes, which are required to indicate aria-owns, aria-controls and aria-labelledby
     * @param {string} [options.menuClass=accessible-megamenu] - CSS class used to define the megamenu styling
     * @param {string} [options.topNavItemClass=accessible-megamenu-top-nav-item] - CSS class for a top-level navigation item in the megamenu
     * @param {string} [options.panelClass=accessible-megamenu-panel] - CSS class for a megamenu panel
     * @param {string} [options.panelGroupClass=accessible-megamenu-panel-group] - CSS class for a group of items within a megamenu panel
     * @param {string} [options.hoverClass=hover] - CSS class for the hover state
     * @param {string} [options.focusClass=focus] - CSS class for the focus state
     * @param {string} [options.openClass=open] - CSS class for the open state
     * @constructor
     */
function g(b,c){this.element=b;
// merge optional settings and defaults into settings
this.settings=a.extend({},e,c);this._defaults=e;this._name=d;this.mouseTimeoutID=null;this.focusTimeoutID=null;this.mouseFocused=false;this.justFocused=false;this.init()}g.prototype=function(){/* private attributes and methods ------------------------ */
var e=0,h=1e3,i="",j=typeof b.hasOwnProperty==="function"&&!!b.hasOwnProperty("ontouchstart"),k,l,m,n,o,p,q,r,s,t,u,v,w;/**
         * @name jQuery.fn.accessibleMegaMenu~_getPlugin
         * @desc Returns the parent accessibleMegaMenu instance for a given element
         * @param {jQuery} element
         * @memberof jQuery.fn.accessibleMegaMenu
         * @inner
         * @private
         */
k=function(b){return a(b).closest(":data(plugin_"+d+")").data("plugin_"+d)};/**
         * @name jQuery.fn.accessibleMegaMenu~_addUniqueId
         * @desc Adds a unique id and element.
         * The id string starts with the
         * string defined in settings.uuidPrefix.
         * @param {jQuery} element
         * @memberof jQuery.fn.accessibleMegaMenu
         * @inner
         * @private
         */
l=function(b){b=a(b);var c=this.settings;if(!b.attr("id")){b.attr("id",c.uuidPrefix+"-"+(new Date).getTime()+"-"+ ++e)}};/**
         * @name jQuery.fn.accessibleMegaMenu~_togglePanel
         * @desc Toggle the display of mega menu panels in response to an event.
         * The optional boolean value 'hide' forces all panels to hide.
         * @param {event} event
         * @param {Boolean} [hide] Hide all mega menu panels when true
         * @memberof jQuery.fn.accessibleMegaMenu
         * @inner
         * @private
         */
m=function(b,d){var e=a(b.target),g=this,h=this.settings,i=this.menu,j=e.closest("."+h.topNavItemClass),k=e.hasClass(h.panelClass)?e:e.closest("."+h.panelClass),l;w.call(this,true);if(d){j=i.find("."+h.topNavItemClass+" ."+h.openClass+":first").closest("."+h.topNavItemClass);if(!(j.is(b.relatedTarget)||j.has(b.relatedTarget).length>0)){if((b.type==="mouseout"||b.type==="focusout")&&j.has(c.activeElement).length>0){return}j.find("[aria-expanded]").attr("aria-expanded","false").removeClass(h.openClass).filter("."+h.panelClass).attr("aria-hidden","true");if(b.type==="keydown"&&b.keyCode===f.ESCAPE||b.type==="DOMAttrModified"){l=j.find(":tabbable:first");setTimeout(function(){i.find("[aria-expanded]."+g.settings.panelClass).off("DOMAttrModified.accessible-megamenu");l.focus();g.justFocused=false},99)}}else if(j.length===0){i.find("[aria-expanded=true]").attr("aria-expanded","false").removeClass(h.openClass).filter("."+h.panelClass).attr("aria-hidden","true")}}else{clearTimeout(g.focusTimeoutID);j.siblings().find("[aria-expanded]").attr("aria-expanded","false").removeClass(h.openClass).filter("."+h.panelClass).attr("aria-hidden","true");j.find("[aria-expanded]").attr("aria-expanded","true").addClass(h.openClass).filter("."+h.panelClass).attr("aria-hidden","false");if(b.type==="mouseover"&&e.is(":tabbable")&&j.length===1&&k.length===0&&i.has(c.activeElement).length>0){e.focus();g.justFocused=false}w.call(g)}};/**
         * @name jQuery.fn.accessibleMegaMenu~_clickHandler
         * @desc Handle click event on mega menu item
         * @param {event} Event object
         * @memberof jQuery.fn.accessibleMegaMenu
         * @inner
         * @private
         */
n=function(b){var c=a(b.currentTarget),d=c.closest("."+this.settings.topNavItemClass),e=c.closest("."+this.settings.panelClass);if(d.length===1&&e.length===0&&d.find("."+this.settings.panelClass).length===1){if(!c.hasClass(this.settings.openClass)){b.preventDefault();b.stopPropagation();m.call(this,b);this.justFocused=false}else{if(this.justFocused){b.preventDefault();b.stopPropagation();this.justFocused=false}else if(j){b.preventDefault();b.stopPropagation();m.call(this,b,c.hasClass(this.settings.openClass))}}}};/**
         * @name jQuery.fn.accessibleMegaMenu~_clickOutsideHandler
         * @desc Handle click event outside of a the megamenu
         * @param {event} Event object
         * @memberof jQuery.fn.accessibleMegaMenu
         * @inner
         * @private
         */
o=function(b){if(a(b.target).closest(this.menu).length===0){b.preventDefault();b.stopPropagation();m.call(this,b,true)}};/**
         * @name jQuery.fn.accessibleMegaMenu~_DOMAttrModifiedHandler
         * @desc Handle DOMAttrModified event on panel to respond to Windows 8 Narrator ExpandCollapse pattern
         * @param {event} Event object
         * @memberof jQuery.fn.accessibleMegaMenu
         * @inner
         * @private
         */
p=function(b){if(b.originalEvent.attrName==="aria-expanded"&&b.originalEvent.newValue==="false"&&a(b.target).hasClass(this.settings.openClass)){b.preventDefault();b.stopPropagation();m.call(this,b,true)}};/**
         * @name jQuery.fn.accessibleMegaMenu~_focusInHandler
         * @desc Handle focusin event on mega menu item.
         * @param {event} Event object
         * @memberof jQuery.fn.accessibleMegaMenu
         * @inner
         * @private
         */
q=function(b){clearTimeout(this.focusTimeoutID);var c=a(b.target),d=c.closest("."+this.settings.panelClass);c.addClass(this.settings.focusClass).on("click.accessible-megamenu",a.proxy(n,this));this.justFocused=!this.mouseFocused;this.mouseFocused=false;if(this.panels.not(d).filter("."+this.settings.openClass).length){m.call(this,b)}};/**
         * @name jQuery.fn.accessibleMegaMenu~_focusOutHandler
         * @desc Handle focusout event on mega menu item.
         * @param {event} Event object
         * @memberof jQuery.fn.accessibleMegaMenu
         * @inner
         * @private
         */
r=function(c){this.justFocused=false;var d=this,e=a(c.target),f=e.closest("."+this.settings.topNavItemClass),g=false;e.removeClass(this.settings.focusClass).off("click.accessible-megamenu");if(b.cvox){
// If ChromeVox is running...
d.focusTimeoutID=setTimeout(function(){b.cvox.Api.getCurrentNode(function(a){if(f.has(a).length){
// and the current node being voiced is in
// the mega menu, clearTimeout,
// so the panel stays open.
clearTimeout(d.focusTimeoutID)}else{d.focusTimeoutID=setTimeout(function(a,b,c){m.call(a,b,c)},275,d,c,true)}})},25)}else{d.focusTimeoutID=setTimeout(function(){m.call(d,c,true)},300)}};/**
         * @name jQuery.fn.accessibleMegaMenu~_keyDownHandler
         * @desc Handle keydown event on mega menu.
         * @param {event} Event object
         * @memberof jQuery.fn.accessibleMegaMenu
         * @inner
         * @private
         */
s=function(c){var d=this.constructor===g?this:k(this),// determine the AccessibleMegaMenu plugin instance
e=d.settings,j=a(a(this).is("."+e.hoverClass+":tabbable")?this:c.target),// if the element is hovered the target is this, otherwise, its the focused element
l=d.menu,o=d.topnavitems,p=j.closest("."+e.topNavItemClass),q=l.find(":tabbable"),r=j.hasClass(e.panelClass)?j:j.closest("."+e.panelClass),s=r.find("."+e.panelGroupClass),t=j.closest("."+e.panelGroupClass),u,v=c.keyCode||c.which,w,x,y,z,A=false,B=f.keyMap[c.keyCode]||"",C,D=p.length===1&&r.length===0;if(j.is("input:focus, select:focus, textarea:focus, button:focus")){
// if the event target is a form element we should handle keydown normally
return}if(j.is("."+e.hoverClass+":tabbable")){a("html").off("keydown.accessible-megamenu")}switch(v){case f.ESCAPE:m.call(d,c,true);break;case f.DOWN:c.preventDefault();if(D){m.call(d,c);A=p.find("."+e.panelClass+" :tabbable:first").focus().length===1}else{A=q.filter(":gt("+q.index(j)+"):first").focus().length===1}if(!A&&b.opera&&opera.toString()==="[object Opera]"&&(c.ctrlKey||c.metaKey)){q=a(":tabbable");x=q.index(j);A=a(":tabbable:gt("+a(":tabbable").index(j)+"):first").focus().length===1}break;case f.UP:c.preventDefault();if(D&&j.hasClass(e.openClass)){m.call(d,c,true);u=o.filter(":lt("+o.index(p)+"):last");if(u.children("."+e.panelClass).length){A=u.children().attr("aria-expanded","true").addClass(e.openClass).filter("."+e.panelClass).attr("aria-hidden","false").find(":tabbable:last").focus()===1}}else if(!D){A=q.filter(":lt("+q.index(j)+"):last").focus().length===1}if(!A&&b.opera&&opera.toString()==="[object Opera]"&&(c.ctrlKey||c.metaKey)){q=a(":tabbable");x=q.index(j);A=a(":tabbable:lt("+a(":tabbable").index(j)+"):first").focus().length===1}break;case f.RIGHT:c.preventDefault();if(D){A=o.filter(":gt("+o.index(p)+"):first").find(":tabbable:first").focus().length===1}else{if(s.length&&t.length){
// if the current panel contains panel groups, and we are able to focus the first tabbable element of the next panel group
A=s.filter(":gt("+s.index(t)+"):first").find(":tabbable:first").focus().length===1}if(!A){A=p.find(":tabbable:first").focus().length===1}}break;case f.LEFT:c.preventDefault();if(D){A=o.filter(":lt("+o.index(p)+"):last").find(":tabbable:first").focus().length===1}else{if(s.length&&t.length){
// if the current panel contains panel groups, and we are able to focus the first tabbable element of the previous panel group
A=s.filter(":lt("+s.index(t)+"):last").find(":tabbable:first").focus().length===1}if(!A){A=p.find(":tabbable:first").focus().length===1}}break;case f.TAB:x=q.index(j);if(c.shiftKey&&D&&j.hasClass(e.openClass)){m.call(d,c,true);u=o.filter(":lt("+o.index(p)+"):last");if(u.children("."+e.panelClass).length){A=u.children().attr("aria-expanded","true").addClass(e.openClass).filter("."+e.panelClass).attr("aria-hidden","false").find(":tabbable:last").focus()}}else if(c.shiftKey&&x>0){A=q.filter(":lt("+x+"):last").focus().length===1}else if(!c.shiftKey&&x<q.length-1){A=q.filter(":gt("+x+"):first").focus().length===1}else if(b.opera&&opera.toString()==="[object Opera]"){q=a(":tabbable");x=q.index(j);if(c.shiftKey){A=a(":tabbable:lt("+a(":tabbable").index(j)+"):last").focus().length===1}else{A=a(":tabbable:gt("+a(":tabbable").index(j)+"):first").focus().length===1}}if(A){c.preventDefault()}break;case f.SPACE:if(D){c.preventDefault();n.call(d,c)}else{return true}break;case f.ENTER:return true;break;default:
// alphanumeric filter
clearTimeout(this.keydownTimeoutID);i+=B!==i?B:"";if(i.length===0){return}this.keydownTimeoutID=setTimeout(function(){i=""},h);if(D&&!j.hasClass(e.openClass)){q=q.filter(":not(."+e.panelClass+" :tabbable)")}else{q=p.find(":tabbable")}if(c.shiftKey){q=a(q.get().reverse())}for(x=0;x<q.length;x++){y=q.eq(x);if(y.is(j)){w=i.length===1?x+1:x;break}}C=new RegExp("^"+i.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&"),"i");for(x=w;x<q.length;x++){y=q.eq(x);z=a.trim(y.text());if(C.test(z)){A=true;y.focus();break}}if(!A){for(x=0;x<w;x++){y=q.eq(x);z=a.trim(y.text());if(C.test(z)){y.focus();break}}}break}d.justFocused=false};/**
         * @name jQuery.fn.accessibleMegaMenu~_mouseDownHandler
         * @desc Handle mousedown event on mega menu.
         * @param {event} Event object
         * @memberof accessibleMegaMenu
         * @inner
         * @private
         */
t=function(b){if(a(b.target).is(this.settings.panelClass)||a(b.target).closest(":focusable").length){this.mouseFocused=true}this.mouseTimeoutID=setTimeout(function(){clearTimeout(this.focusTimeoutID)},1)};/**
         * @name jQuery.fn.accessibleMegaMenu~_mouseOverHandler
         * @desc Handle mouseover event on mega menu.
         * @param {event} Event object
         * @memberof jQuery.fn.accessibleMegaMenu
         * @inner
         * @private
         */
u=function(b){clearTimeout(this.mouseTimeoutID);a(b.target).addClass(this.settings.hoverClass);m.call(this,b);if(a(b.target).is(":tabbable")){a("html").on("keydown.accessible-megamenu",a.proxy(s,b.target))}};/**
         * @name jQuery.fn.accessibleMegaMenu~_mouseOutHandler
         * @desc Handle mouseout event on mega menu.
         * @param {event} Event object
         * @memberof jQuery.fn.accessibleMegaMenu
         * @inner
         * @private
         */
v=function(b){var c=this;a(b.target).removeClass(c.settings.hoverClass);c.mouseTimeoutID=setTimeout(function(){m.call(c,b,true)},250);if(a(b.target).is(":tabbable")){a("html").off("keydown.accessible-megamenu")}};w=function(b){var c=this.menu;if(b){a("html").off("mouseup.outside-accessible-megamenu, touchend.outside-accessible-megamenu, mspointerup.outside-accessible-megamenu,  pointerup.outside-accessible-megamenu");c.find("[aria-expanded]."+this.settings.panelClass).off("DOMAttrModified.accessible-megamenu")}else{a("html").on("mouseup.outside-accessible-megamenu, touchend.outside-accessible-megamenu, mspointerup.outside-accessible-megamenu,  pointerup.outside-accessible-megamenu",a.proxy(o,this));/* Narrator in Windows 8 automatically toggles the aria-expanded property on double tap or click.
                   To respond to the change to collapse the panel, we must add a listener for a DOMAttrModified event. */
c.find("[aria-expanded=true]."+this.settings.panelClass).on("DOMAttrModified.accessible-megamenu",a.proxy(p,this))}};/* public attributes and methods ------------------------- */
return{constructor:g,/**
             * @lends jQuery.fn.accessibleMegaMenu
             * @desc Initializes an instance of the accessibleMegaMenu plugins
             * @memberof jQuery.fn.accessibleMegaMenu
             * @instance
             */
init:function(){var b=this.settings,c=a(this.element),d=c.children().first(),e=d.children();this.start(b,c,d,e)},start:function(b,d,e,f){var g=this;this.settings=b;this.menu=e;this.topnavitems=f;d.attr("role","navigation");e.addClass(b.menuClass);f.each(function(c,d){var e,f;d=a(d);d.addClass(b.topNavItemClass);e=d.find(":tabbable:first");f=d.children(":not(:tabbable):last");l.call(g,e);if(f.length){l.call(g,f);e.attr({"aria-haspopup":true,"aria-controls":f.attr("id"),"aria-expanded":false});f.attr({role:"group","aria-expanded":false,"aria-hidden":true}).addClass(b.panelClass).not("[aria-labelledby]").attr("aria-labelledby",e.attr("id"))}});this.panels=e.find("."+b.panelClass);e.on("focusin.accessible-megamenu",":focusable, ."+b.panelClass,a.proxy(q,this)).on("focusout.accessible-megamenu",":focusable, ."+b.panelClass,a.proxy(r,this)).on("keydown.accessible-megamenu",a.proxy(s,this)).on("mouseover.accessible-megamenu",a.proxy(u,this)).on("mouseout.accessible-megamenu",a.proxy(v,this)).on("mousedown.accessible-megamenu",a.proxy(t,this));if(j){e.on("touchstart.accessible-megamenu",a.proxy(n,this))}e.find("hr").attr("role","separator");if(a(c.activeElement).closest(e).length){a(c.activeElement).trigger("focusin.accessible-megamenu")}},/**
             * @desc Get default values
             * @example $(selector).accessibleMegaMenu("getDefaults");
             * @return {object}
             * @memberof jQuery.fn.accessibleMegaMenu
             * @instance
             */
getDefaults:function(){return this._defaults},/**
             * @desc Get any option set to plugin using its name (as string)
             * @example $(selector).accessibleMegaMenu("getOption", some_option);
             * @param {string} opt
             * @return {string}
             * @memberof jQuery.fn.accessibleMegaMenu
             * @instance
             */
getOption:function(a){return this.settings[a]},/**
             * @desc Get all options
             * @example $(selector).accessibleMegaMenu("getAllOptions");
             * @return {object}
             * @memberof jQuery.fn.accessibleMegaMenu
             * @instance
             */
getAllOptions:function(){return this.settings},/**
             * @desc Set option
             * @example $(selector).accessibleMegaMenu("setOption", "option_name",  "option_value",  reinitialize);
             * @param {string} opt - Option name
             * @param {string} val - Option value
             * @param {boolean} [reinitialize] - boolean to re-initialize the menu.
             * @memberof jQuery.fn.accessibleMegaMenu
             * @instance
             */
setOption:function(a,b,c){this.settings[a]=b;if(c){this.init()}}}}();/* lightweight plugin wrapper around the constructor,
       to prevent against multiple instantiations */
/**
     * @class accessibleMegaMenu
     * @memberOf jQuery.fn
     * @classdesc Implements an accessible mega menu as a jQuery plugin.
     * <p>The mega-menu It is modeled after the mega menu on {@link http://adobe.com|adobe.com} but has been simplified for use by others. A brief description of the interaction design choices can be found in a blog post at {@link http://blogs.adobe.com/accessibility/2013/05/adobe-com.html|Mega menu accessibility on adobe.com}.</p>
     * <h3>Keyboard Accessibility</h3>
     * <p>The accessible mega menu supports keyboard interaction modeled after the behavior described in the {@link http://www.w3.org/TR/wai-aria-practices/#menu|WAI-ARIA Menu or Menu bar (widget) design pattern}, however we also try to respect users' general expectations for the behavior of links in a global navigation. To this end, the accessible mega menu implementation permits tab focus on each of the six top-level menu items. When one of the menu items has focus, pressing the Enter key, Spacebar or Down arrow will open the submenu panel, and pressing the Left or Right arrow key will shift focus to the adjacent menu item. Links within the submenu panels are included in the tab order when the panel is open. They can also be navigated with the arrow keys or by typing the first character in the link name, which speeds up keyboard navigation considerably. Pressing the Escape key closes the submenu and restores focus to the parent menu item.</p>
     * <h3>Screen Reader Accessibility</h3>
     * <p>The accessible mega menu models its use of WAI-ARIA Roles, States, and Properties after those described in the {@link http://www.w3.org/TR/wai-aria-practices/#menu|WAI-ARIA Menu or Menu bar (widget) design pattern} with some notable exceptions, so that it behaves better with screen reader user expectations for global navigation. We don't use <code class="prettyprint prettyprinted" style=""><span class="pln">role</span><span class="pun">=</span><span class="str">"menu"</span></code> for the menu container and <code class="prettyprint prettyprinted" style=""><span class="pln">role</span><span class="pun">=</span><span class="str">"menuitem"</span></code> for each of the links therein, because if we do, assistive technology will no longer interpret the links as links, but instead, as menu items, and the links in our global navigation will no longer show up when a screen reader user executes a shortcut command to bring up a list of links in the page.</p>
     * @example <h4>HTML</h4><hr/>
&lt;nav&gt;
    &lt;ul class=&quot;nav-menu&quot;&gt;
        &lt;li class=&quot;nav-item&quot;&gt;
            &lt;a href=&quot;?movie&quot;&gt;Movies&lt;/a&gt;
            &lt;div class=&quot;sub-nav&quot;&gt;
                &lt;ul class=&quot;sub-nav-group&quot;&gt;
                    &lt;li&gt;&lt;a href=&quot;?movie&amp;genre=0&quot;&gt;Action &amp;amp; Adventure&lt;/a&gt;&lt;/li&gt;
                    &lt;li&gt;&lt;a href=&quot;?movie&amp;genre=2&quot;&gt;Children &amp;amp; Family&lt;/a&gt;&lt;/li&gt;
                    &lt;li&gt;&amp;#8230;&lt;/li&gt;
                &lt;/ul&gt;
                &lt;ul class=&quot;sub-nav-group&quot;&gt;
                    &lt;li&gt;&lt;a href=&quot;?movie&amp;genre=7&quot;&gt;Dramas&lt;/a&gt;&lt;/li&gt;
                    &lt;li&gt;&lt;a href=&quot;?movie&amp;genre=9&quot;&gt;Foreign&lt;/a&gt;&lt;/li&gt;
                    &lt;li&gt;&amp;#8230;&lt;/li&gt;
                &lt;/ul&gt;
                &lt;ul class=&quot;sub-nav-group&quot;&gt;
                    &lt;li&gt;&lt;a href=&quot;?movie&amp;genre=14&quot;&gt;Musicals&lt;/a&gt;&lt;/li&gt;
                    &lt;li&gt;&lt;a href=&quot;?movie&amp;genre=15&quot;&gt;Romance&lt;/a&gt;&lt;/li&gt;
                    &lt;li&gt;&amp;#8230;&lt;/li&gt;
                &lt;/ul&gt;
            &lt;/div&gt;
        &lt;/li&gt;
        &lt;li class=&quot;nav-item&quot;&gt;
            &lt;a href=&quot;?tv&quot;&gt;TV Shows&lt;/a&gt;
            &lt;div class=&quot;sub-nav&quot;&gt;
                &lt;ul class=&quot;sub-nav-group&quot;&gt;
                    &lt;li&gt;&lt;a href=&quot;?tv&amp;genre=20&quot;&gt;Classic TV&lt;/a&gt;&lt;/li&gt;
                    &lt;li&gt;&lt;a href=&quot;?tv&amp;genre=21&quot;&gt;Crime TV&lt;/a&gt;&lt;/li&gt;
                    &lt;li&gt;&amp;#8230;&lt;/li&gt;
                &lt;/ul&gt;
                &lt;ul class=&quot;sub-nav-group&quot;&gt;
                    &lt;li&gt;&lt;a href=&quot;?tv&amp;genre=27&quot;&gt;Reality TV&lt;/a&gt;&lt;/li&gt;
                    &lt;li&gt;&lt;a href=&quot;?tv&amp;genre=30&quot;&gt;TV Action&lt;/a&gt;&lt;/li&gt;
                    &lt;li&gt;&amp;#8230;&lt;/li&gt;
                &lt;/ul&gt;
                &lt;ul class=&quot;sub-nav-group&quot;&gt;
                    &lt;li&gt;&lt;a href=&quot;?tv&amp;genre=33&quot;&gt;TV Dramas&lt;/a&gt;&lt;/li&gt;
                    &lt;li&gt;&lt;a href=&quot;?tv&amp;genre=34&quot;&gt;TV Horror&lt;/a&gt;&lt;/li&gt;
                    &lt;li&gt;&amp;#8230;&lt;/li&gt;
                &lt;/ul&gt;
            &lt;/div&gt;
        &lt;/li&gt;
    &lt;/ul&gt;
&lt;/nav&gt;
     * @example <h4>CSS</h4><hr/>
&#47;* Rudimentary mega menu CSS for demonstration *&#47;

&#47;* mega menu list *&#47;
.nav-menu {
    display: block;
    position: relative;
    list-style: none;
    margin: 0;
    padding: 0;
    z-index: 15;
}

&#47;* a top level navigation item in the mega menu *&#47;
.nav-item {
    list-style: none;
    display: inline-block;
    padding: 0;
    margin: 0;
}

&#47;* first descendant link within a top level navigation item *&#47;
.nav-item &gt; a {
    position: relative;
    display: inline-block;
    padding: 0.5em 1em;
    margin: 0 0 -1px 0;
    border: 1px solid transparent;
}

&#47;* focus/open states of first descendant link within a top level
   navigation item *&#47;
.nav-item &gt; a:focus,
.nav-item &gt; a.open {
    border: 1px solid #dedede;
}

&#47;* open state of first descendant link within a top level
   navigation item *&#47;
.nav-item &gt; a.open {
    background-color: #fff;
    border-bottom: none;
    z-index: 1;
}

&#47;* sub-navigation panel *&#47;
.sub-nav {
    position: absolute;
    display: none;
    top: 2.2em;
    margin-top: -1px;
    padding: 0.5em 1em;
    border: 1px solid #dedede;
    background-color: #fff;
}

&#47;* sub-navigation panel open state *&#47;
.sub-nav.open {
    display: block;
}

&#47;* list of items within sub-navigation panel *&#47;
.sub-nav ul {
    display: inline-block;
    vertical-align: top;
    margin: 0 1em 0 0;
    padding: 0;
}

&#47;* list item within sub-navigation panel *&#47;
.sub-nav li {
    display: block;
    list-style-type: none;
    margin: 0;
    padding: 0;
}
     * @example <h4>JavaScript</h4><hr/>
&lt;!-- include jquery --&gt;
&lt;script src=&quot;http://code.jquery.com/jquery-1.10.1.min.js&quot;&gt;&lt;/script&gt;

&lt;!-- include the jquery-accessibleMegaMenu plugin script --&gt;
&lt;script src=&quot;js/jquery-accessibleMegaMenu.js&quot;&gt;&lt;/script&gt;

&lt;!-- initialize a selector as an accessibleMegaMenu --&gt;
&lt;script&gt;
    $(&quot;nav:first&quot;).accessibleMegaMenu({
        &#47;* prefix for generated unique id attributes, which are required to indicate aria-owns, aria-controls and aria-labelledby *&#47;
        uuidPrefix: &quot;accessible-megamenu&quot;,

        &#47;* css class used to define the megamenu styling *&#47;
        menuClass: &quot;nav-menu&quot;,

        &#47;* css class for a top-level navigation item in the megamenu *&#47;
        topNavItemClass: &quot;nav-item&quot;,

        &#47;* css class for a megamenu panel *&#47;
        panelClass: &quot;sub-nav&quot;,

        &#47;* css class for a group of items within a megamenu panel *&#47;
        panelGroupClass: &quot;sub-nav-group&quot;,

        &#47;* css class for the hover state *&#47;
        hoverClass: &quot;hover&quot;,

        &#47;* css class for the focus state *&#47;
        focusClass: &quot;focus&quot;,

        &#47;* css class for the open state *&#47;
        openClass: &quot;open&quot;
    });
&lt;/script&gt;
     * @param {object} [options] Mega Menu options
     * @param {string} [options.uuidPrefix=accessible-megamenu] - Prefix for generated unique id attributes, which are required to indicate aria-owns, aria-controls and aria-labelledby
     * @param {string} [options.menuClass=accessible-megamenu] - CSS class used to define the megamenu styling
     * @param {string} [options.topNavItemClass=accessible-megamenu-top-nav-item] - CSS class for a top-level navigation item in the megamenu
     * @param {string} [options.panelClass=accessible-megamenu-panel] - CSS class for a megamenu panel
     * @param {string} [options.panelGroupClass=accessible-megamenu-panel-group] - CSS class for a group of items within a megamenu panel
     * @param {string} [options.hoverClass=hover] - CSS class for the hover state
     * @param {string} [options.focusClass=focus] - CSS class for the focus state
     * @param {string} [options.openClass=open] - CSS class for the open state
     */
a.fn[d]=function(b){return this.each(function(){if(!a.data(this,"plugin_"+d)){a.data(this,"plugin_"+d,new a.fn[d].AccessibleMegaMenu(this,b))}})};a.fn[d].AccessibleMegaMenu=g;/* :focusable and :tabbable selectors from
       https://raw.github.com/jquery/jquery-ui/master/ui/jquery.ui.core.js */
/**
     * @private
     */
function h(b){return a.expr.filters.visible(b)&&!a(b).parents().addBack().filter(function(){return a.css(this,"visibility")==="hidden"}).length}/**
     * @private
     */
function i(b,c){var d,e,f,g=b.nodeName.toLowerCase();if("area"===g){d=b.parentNode;e=d.name;if(!b.href||!e||d.nodeName.toLowerCase()!=="map"){return false}f=a("img[usemap=#"+e+"]")[0];return!!f&&h(f)}
// the element and all of its ancestors must be visible
return(/input|select|textarea|button|object/.test(g)?!b.disabled:"a"===g?b.href||c:c)&&h(b)}a.extend(a.expr[":"],{data:a.expr.createPseudo?a.expr.createPseudo(function(b){return function(c){return!!a.data(c,b)}}):// support: jQuery <1.8
function(b,c,d){return!!a.data(b,d[3])},focusable:function(b){return i(b,!isNaN(a.attr(b,"tabindex")))},tabbable:function(b){var c=a.attr(b,"tabindex"),d=isNaN(c);return(d||c>=0)&&i(b,!d)}})})(jQuery,window,document);jQuery(function(a){jQuery(function(){enquire.register("screen and (min-width:500px)",{// jshint ignore:line
match:function(){
// Main Nav
a(".menu-main-container").accessibleMegaMenu({uuidPrefix:"accessible-nav",menuClass:"nav-menu",topNavItemClass:"nav-item",panelClass:"sub-nav",panelGroupClass:"sub-nav-group",hoverClass:"hover",focusClass:"focus",openClass:"open"})},unmatch:function(){}})});
// Extend jQuery to make a toggle text function.
jQuery.fn.extend({toggleText:function(b,c){return this.each(function(){c=c||"";a(this).text()!==c&&b?a(this).text(c):a(this).text(b)})}});
// Navigation Toggle
jQuery(function(){a("#js-navigation-toggle").click(function(){a(this).toggleText("Close","Menu");a("#js-navigation").toggleClass("opened")})});
// Super simple tabs
jQuery(function(){var b=a(".tab");b.hide().filter(":first").attr("aria-hidden","true").show();var c=a(".campaign-tabs-navigation li a, .tabs-navigation li a, .policy-tabs-navigation li a");c.click(function(){b.hide().attr("aria-hidden","true");b.filter(this.hash).attr("aria-hidden","false").show();c.removeClass("selected").attr("aria-expanded","false");a(this).addClass("selected").attr("aria-expanded","true");return false}).filter(":first").click().attr("aria-expanded","true")});/*
     * Policy Dashboard
     */
a(document).ready(function(){
//Get phase to reopen.
var e=f("PTK-phase");if(e!==""){a("#policy-stage-select").val(e);b()}
//Get stepIDs to reopen.
e=f("PTK-openstep");if(e!==""){var g=e===""?[]:JSON.parse(e);for(var h=g.length-1;h>=0;h--){c(g[h])}}
//Remember if recommended steps were showen
e=f("PTK-recommended");if(e!==""){if(e==="yes"){d()}}});/*
     * User clicks the show steps button
     */
a("#showsteps").click(function(c){
//Save in a cookie so we can restore the view between sessions
e("PTK-phase",a("#policy-stage-select").val(),24*30);//30 days.
b();return false});/*
     * Show the steps depending on the value of the dropdown
     */
function b(){
//hide all boxes
a(".policy-step").hide();
//show the one selected in the dropdown
a(".policy-step."+a("#policy-stage-select").val()+"-must-do").fadeToggle(200);
//if the show recommended had been clicked before then do show them
if(a("#show-recommended-steps").data("clicked")){a(".policy-step."+a("#policy-stage-select").val()+"-recommended").slideToggle(200)}
//suppress default behaviour.
return false}/*
     * Respond to user clicking a policy step to expand it
     */
a(".init-step-box").click(function(){var b=a(this).attr("data");var d=f("PTK-openstep");var g=d===""?[]:JSON.parse(d);if(a("."+b).data("clicked")){
//Remove all instance of this step id from the array
//NOTE: forEach not supported by IE8
for(var h=g.length-1;h>=0;h--){if(g[h]===b)g.splice(h,1)}}else{g.push(b)}e("PTK-openstep",JSON.stringify(g),24*30);//30 days.
c(b)});/*
     * Called from user click or from the state being restored from cookie data.
     */
function c(b){a("."+b).next(".expanded-step-box").slideToggle(100);
//update the glyph
if(a("."+b).data("clicked")){a("."+b).find(".policy-step-more").html("More")}else{a("."+b).find(".policy-step-more").html("Less")}
//keep track of if the div is expanded or not.
a("."+b).data("clicked",!a("."+b).data("clicked"))}/*
     * Show the recommended step and store the users preference in a cookie.
     */
a("#show-recommended-steps").click(function(){if(a("#show-recommended-steps").data("clicked")){e("PTK-recommended","no",-1)}else{e("PTK-recommended","yes",24*30)}d()});/*
     * Expand the recommend step section, either in responce to user input or value stored in cookie.
     */
function d(){a(".policy-step."+a("#policy-stage-select").val()+"-recommended").slideToggle(200);if(a("#show-recommended-steps").data("clicked")){a("#show-recommended-steps").text("Show recommended steps")}else{a("#show-recommended-steps").text("Hide recommended steps")}a("#show-recommended-steps").data("clicked",!a("#show-recommended-steps").data("clicked"))}
//make modalboxs cature tab input
a("#lastInput").blur(function(){a("#firstInput").focus()});/**
     * dismiss the emergency message and track which ones closed
     */
/*
    $('.close_button').click(function()
    {
        $(this).parent().fadeTo('slow', 0).slideUp();
        var temp = $(this).attr('data-post-hash');
        setCookie('eMsg-'+temp,'true',9)
    })
    */
/**
     * Cookie functions
     * note - set all paths to root.
     */
function e(a,b,c){var d=new Date;d.setTime(d.getTime()+c*60*60*1e3);var e="expires="+d.toGMTString();document.cookie=a+"="+b+"; "+e+"; path=/"}function f(a){var b=a+"=";var c=document.cookie.split(";");for(var d=0;d<c.length;d++){var e=c[d];while(e.charAt(0)===" ")e=e.substring(1);if(e.indexOf(b)!==-1)return e.substring(b.length,e.length)}return""}
//expand to show casestudy on policy article page
a(".show-casestudy-button").click(function(){a(this).next(".show-casestudy-box").slideToggle(100);
//rip .toggle depeciated in jq1.9
a(this).data("clicked",!a(this).data("clicked"));if(a(this).data("clicked")){a(this).text("Hide case study")}else{a(this).text("Show case study")}});
//do we still need this.
/*
    $('[data-toggle=offcanvas]').click(function() {
        $('.row-offcanvas').toggleClass('active');
    });
    */
/**
     * Admin bar
     */
a("body").has("#wpadminbar").addClass("adminbar");/**
     * Setting user_meta on location select box change
     */
a("[data-location-selector]").change(function(){var b=a(this),c=b.attr("data-action"),d=b.attr("data-nonce"),e=parseInt(b.val(),10);a.ajax({url:c,method:"POST",data:{action:"select-location",_wpnonce:d,location:e},success:function(a){var b=JSON.parse(a);if(b.ok){location.reload(true)}else{location.replace("?news_locale="+e)}},error:function(){}})});/**
     * show any emergency messages that haven't been dismissed
     */
var g;var h;a(".emergency-message").each(function(){h=a(this).attr("data-post-cookie");g=f(h);if(g!=="true"){a(this).css("display","block")}});
// Adding last-child class because IE8 doesn't support :last-child selector
// $('*:last-child').addClass('last-child');
// Make placeholder appear on IE
// don't think this is needed maybe safe to remove AS
/*
    $(function() {
        var input = document.createElement('input');
        if(('placeholder' in input)===false) {
            $('[placeholder]').focus(function() {
                var i = $(this);
                if(i.val() === i.attr('placeholder')) {
                    i.val('').removeClass('placeholder');
                    if(i.hasClass('password')) {
                        i.removeClass('password');
                        this.type='password';
                    }
                }
            }).blur(function() {
                var i = $(this);
                if(i.val() === '' || i.val() === i.attr('placeholder')) {
                    if(this.type==='password') {
                        i.addClass('password');
                        this.type='text';
                    }
                    i.addClass('placeholder').val(i.attr('placeholder'));
                }
            }).blur().parents('form').submit(function() {
                $(this).find('[placeholder]').each(function() {
                    var i = $(this);
                    if(i.val() === i.attr('placeholder'))
                        i.val('');
                })
            });
        }
    });
    */
a(".js-exclude-news").click(function(a){if(typeof window.ga!=="undefined"){var b=this.checked?"CheckExcludeNewsCheckbox":b="UncheckExcludeNewsCheckbox";window.ga("send","event","Search",b)}this.form.submit()})});
//# sourceMappingURL=main.min.js.map